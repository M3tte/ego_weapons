/*
 *    MCreator note:
 *
 *    If you lock base mod element files, you can edit this file and the proxy files
 *    and they won't get overwritten. If you change your mod package or modid, you
 *    need to apply these changes to this file MANUALLY.
 *
 *    Settings in @Mod annotation WON'T be changed in case of the base mod element
 *    files lock too, so you need to set them manually here in such case.
 *
 *    Keep the TcorpModElements object in this class and all calls to this object
 *    INTACT in order to preserve functionality of mod elements generated by MCreator.
 *
 *    If you do not lock base mod element files in Workspace settings, this file
 *    will be REGENERATED on each build.
 *
 */
package net.m3tte.ego_weapons;

import net.m3tte.ego_weapons.event.ModelRegisterHandler;
import net.m3tte.ego_weapons.gameasset.EgoWeaponsClientModels;
import net.m3tte.ego_weapons.gameasset.EgoWeaponsModels;
import net.m3tte.ego_weapons.keybind.EgoWeaponsKeybinds;
import net.m3tte.ego_weapons.network.packages.PackageRegistry;
import net.m3tte.ego_weapons.world.capabilities.gamerules.EgoWeaponsGamerules;
import net.minecraft.block.Block;
import net.minecraft.client.Minecraft;
import net.minecraft.enchantment.Enchantment;
import net.minecraft.entity.ai.attributes.Attribute;
import net.minecraft.resources.IResourceManager;
import net.minecraft.util.ResourceLocation;
import net.minecraftforge.common.MinecraftForge;
import net.minecraftforge.event.RegistryEvent;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.fml.event.lifecycle.FMLClientSetupEvent;
import net.minecraftforge.fml.event.lifecycle.FMLCommonSetupEvent;
import net.minecraftforge.fml.event.lifecycle.FMLDedicatedServerSetupEvent;
import net.minecraftforge.fml.event.server.FMLServerStartingEvent;
import net.minecraftforge.fml.javafmlmod.FMLJavaModLoadingContext;
import net.minecraftforge.fml.network.NetworkRegistry;
import net.minecraftforge.fml.network.simple.SimpleChannel;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import java.util.function.Supplier;

@Mod("ego_weapons")
public class EgoWeaponsMod {
	public static final Logger LOGGER = LogManager.getLogger(EgoWeaponsMod.class);

	public static final String MODID = "ego_weapons";
	private static final String PROTOCOL_VERSION = "1";
	public static final SimpleChannel PACKET_HANDLER = NetworkRegistry.newSimpleChannel(new ResourceLocation("ego_weapons", "ego_weapons"),
			() -> PROTOCOL_VERSION, PROTOCOL_VERSION::equals, PROTOCOL_VERSION::equals);
	public EgoWeaponsModElements elements;

	public EgoWeaponsMod() {
		elements = new EgoWeaponsModElements();
		FMLJavaModLoadingContext.get().getModEventBus().register(this);
		FMLJavaModLoadingContext.get().getModEventBus().register(new ModelRegisterHandler());
		FMLJavaModLoadingContext.get().getModEventBus().addListener(this::init);
		FMLJavaModLoadingContext.get().getModEventBus().addListener(this::clientLoad);
		FMLJavaModLoadingContext.get().getModEventBus().addListener(this::doServerStuff);
		EgoWeaponsEFLoader.registerStuffs(FMLJavaModLoadingContext.get().getModEventBus());
		EgoWeaponsGUIElements.register(FMLJavaModLoadingContext.get().getModEventBus());
		EgoWeaponsEffects.register(FMLJavaModLoadingContext.get().getModEventBus());
		MinecraftForge.EVENT_BUS.register(new TcorpModFMLBusEvents(this)); // Modbusevents
		MinecraftForge.EVENT_BUS.register(new EgoWeaponsModVars()); // Dynamic variable registry
		MinecraftForge.EVENT_BUS.register(new PackageRegistry()); // Network packages



	}

	private void init(FMLCommonSetupEvent event) {
		elements.getElements().forEach(element -> element.init(event));
		event.enqueueWork(EgoWeaponsGamerules::registerRules);
	}

	private void doServerStuff(final FMLDedicatedServerSetupEvent event) {
		EgoWeaponsModels.LOGICAL_SERVER.loadArmatures(null);
	}
	public void clientLoad(FMLClientSetupEvent event) {

		elements.getElements().forEach(element -> element.clientLoad(event));
		IResourceManager resourceManager = Minecraft.getInstance().getResourceManager();
		EgoWeaponsModels.LOGICAL_SERVER.loadArmatures(resourceManager);
		EgoWeaponsClientModels.LOGICAL_CLIENT.loadArmatures(resourceManager);
		EgoWeaponsGUIElements.registerClient();
		MinecraftForge.EVENT_BUS.register(new EgoWeaponsKeybinds()); // Custom Keybinds
	}

	@SubscribeEvent
	public void registerBlocks(RegistryEvent.Register<Block> event) {
		event.getRegistry().registerAll(elements.getBlocks().stream().map(Supplier::get).toArray(Block[]::new));
	}

	@SubscribeEvent
	public void registerEnchantments(RegistryEvent.Register<Enchantment> event) {
		event.getRegistry().registerAll(elements.getEnchantments().stream().map(Supplier::get).toArray(Enchantment[]::new));
	}

	@SubscribeEvent
	public void registerSounds(RegistryEvent.Register<net.minecraft.util.SoundEvent> event) {
		EgoWeaponsSounds.registerSounds(event);
	}



	private static class TcorpModFMLBusEvents {
		private final EgoWeaponsMod parent;

		TcorpModFMLBusEvents(EgoWeaponsMod parent) {
			this.parent = parent;
		}

		@SubscribeEvent
		public void serverLoad(FMLServerStartingEvent event) {
			this.parent.elements.getElements().forEach(element -> element.serverLoad(event));
		}
	}
}
